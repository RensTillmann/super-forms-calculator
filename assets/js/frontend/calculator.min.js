// Find the first occurrence of Calculator math
SUPER.init_calculator_strstr = function( $haystack, $needle, $bool ) {
	var $pos = 0;
	$haystack += "";
	$pos = $haystack.indexOf($needle); if ($pos == -1) {
		return false;
	} else {
		return true;
	}
}

// Init Calculator
SUPER.init_calculator = function(){
	var $ = jQuery;
	$('.super-calculator .super-calculator-wrapper').each(function(){
		var $target = $(this);
		if (!SUPER.init_calculator_strstr($target.data('super-numeric-math'), '[')){
	    	$target.data('super-numeric-math', $target.data('super-math'));
		}
		var $form = $(this).parents('.super-form');
	    var $math = $target.data('super-math');
	    if($math!=''){
		    var $regular_expression = /\{(.*?)\}/g;
		    var $array = [];
		    var $value = '';
			var $numeric_math = '';
			var $i = 0;
		    while (($match = $regular_expression.exec($math)) != null) {
		    	$array[$i] = $match[1];
		    	$i++;
		    }
			for (var $i = 0; $i < $array.length; $i++) {
		        var $name = $array[$i];
		        var $element = $form.find('.super-shortcode-field[name="'+$name+'"]');
		        if($element.length){
		        	var $text_field = true;
		        	var $parent = $element.parents('.super-field:eq(0)');
		        	// Check if dropdown field
			        if( ($parent.hasClass('super-dropdown')) || ($parent.hasClass('super-countries')) ){
			            $text_field = false;
			            var $sum = 0;
			            var $selected = $parent.find('.super-dropdown-ui li.selected:not(.super-placeholder)');
			            $selected.each(function () {
			                $sum += parseFloat($(this).data('value'));
			            });
			            $value = $sum;
			        }
		        	// Check if checkbox field
		        	if($parent.hasClass('super-checkbox')){
		        		$text_field = false;
		        		var $sum = 0;
		        		var $checked = $parent.find('input[type="checkbox"]:checked');
			            $checked.each(function () {
			                $sum += parseFloat($(this).val());
			            });
			            $value = $sum;
		        	}
			        // Check if text or textarea field
			        if($text_field==true){
						$value = ($element.val()) ? parseFloat($element.val()) : 0;
			        }
		        	$numeric_math = $target.data('super-numeric-math').replace($name, $value).replace('{', '').replace('}', '');
		        	$target.data('super-numeric-math', $numeric_math);
		        }
		    }
		    
		    // Lets save the field value before playing the counter animation
		    var $decimals = $target.data('decimals');
		    var $thousand_separator = $target.data('thousand-separator');
		    var $decimal_separator = $target.data('decimal-separator');
		    var $prev_amount = $target.parent().find('.super-shortcode-field').val();
		    if($prev_amount=='') $prev_amount = (Math.ceil(0 * 100) / 100).toFixed($decimals);
			var $amount = eval($numeric_math); 
			$amount = (Math.ceil($amount * 100) / 100).toFixed($decimals);
		    $target.parent().find('.super-shortcode-field').val($amount);

		    // Now lets play the animation :)
		    if(!$target.hasClass('animating')){
		    	$target.addClass('animating');
				$({ Counter: parseFloat($prev_amount) }).animate({ Counter: parseFloat($amount) }, {
					duration: 300,
					easing: 'swing',
					step: function ( now, fx ) {
					    var $regular_expression = '\\d(?=(\\d{' + (3 || 3) + '})+' + ($decimals > 0 ? '\\D' : '$') + ')';
					    var $number = (Math.ceil(this.Counter * 100) / 100).toFixed(Math.max(0, ~~$decimals));
					    var $number = ($decimal_separator ? $number.replace('.', $decimal_separator) : $number).replace(new RegExp($regular_expression, 'g'), '$&' + ($thousand_separator || ''));
						$target.find('.super-calculator-amount').text($number);
					},
					complete: function() {
					    var $regular_expression = '\\d(?=(\\d{' + (3 || 3) + '})+' + ($decimals > 0 ? '\\D' : '$') + ')';
					    var $number = (Math.ceil(this.Counter * 100) / 100).toFixed(Math.max(0, ~~$decimals));
					    var $number = ($decimal_separator ? $number.replace('.', $decimal_separator) : $number).replace(new RegExp($regular_expression, 'g'), '$&' + ($thousand_separator || ''));
						$target.find('.super-calculator-amount').text($number);
						$target.removeClass('animating');
					}
				});
			}
		}
	});
}